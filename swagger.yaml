openapi: 3.0.2
servers:
  - url: https://game.pixelwalker.net
  - url: https://api.pixelwalker.net
info:
  description: |-
    Unofficial documentation for Pixelwalker API endpoints. Hopefully PixelWalker devs will change their mind, and expose OpenApi endpoint like this one and maintain it themselves.
  version: 0.18.0-alpha
  title: Pixelwalker API
tags:
  - name: Game
    description: Requests that can only be made to https://game.pixelwalker.net
  - name: Api
    description: Requests that can only be made to https://api.pixelwalker.net
paths:
  /listroomtypes:
    get:
      tags:
        - "Game"
      summary: "Gets server version (in a list for some reason?)"
      operationId: "listroomtypes"
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "string"
  /listblocks:
    get:
      tags:
        - "Game"
      summary: "Gets blocks"
      operationId: "listroomtypes"
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: '#/components/schemas/Block'
  /mappings:
    get:
      tags:
        - "Game"
      summary: "Gets blocks (deprecated, use /listbloocks instead)"
      operationId: "getMappings"
      deprecated: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: "object"
                additionalProperties:
                  type: "number"
  /room/list/{roomType}:
    get:
      tags:
        - "Game"
      summary: Gets lobby information for room type (no idea why room type is needed).
      description: |
        Fetches information about available lobbies based on the specified room type.
      parameters:
        - in: path
          name: roomType
          schema:
            type: string
          required: true
          description: Room type from /listroomtypes
      responses:
        '200':
          description: Successful operation. Returns a list of lobbies.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LobbyResult'
  /api/collections/users/auth-with-password:
    post:
      tags:
        - "Api"
      summary: Authenticates a user with username/email and password.
      description: |
        Authenticates a user against the "users" collection using a username/email and password.  Returns an authentication token and user data on success.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                identity:
                  type: string
                  description: The user's username or email address.
                password:
                  type: string
                  description: The user's password.
      responses:
        '200':
          description: Successful authentication.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResultSuccess'
        '400':
          description: Invalid request or credentials.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIFailure'
  /api/joinkey/{roomType}/{roomId}:
    get:
      tags:
        - "Api"
      summary: Retrieves a join key for a specific room.
      description: |
        Fetches a join key that can be used to join the specified room. The join key may have an expiration.
      parameters:
        - in: path
          name: roomType
          schema:
            type: string
          required: true
          description: Room type from /listroomtypes
        - in: path
          name: roomId
          schema:
            type: string
          required: true
          description: World ID.
      responses:
        '200':
          description: Successful operation. Returns the join key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JoinKeyResult'
        '403':
          description: Not authenticated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIFailure'
components:
  schemas:
    Block:
      properties:
        Id:
          type: integer
          format: int64
          description: Block ID
        PaletteId:
          type: string
          description: >-
            Useful for mapping, allows you to identify the block in case the numeric ID changes.
            
            This is what they refer to as block name for some reason.
            
            NOTE: There may still be an occasion where the block's name is changed, for eg due to a typo.
        Layer:
          type: integer
          description: 0 for Background, 1 for Foreground.
        MinimapColor:
          type: integer
          description: >-
            Unsigned 32 bit integer.
            
            (If you need the hex string: use .toString(16) with 16 as the radix and trim off the leading FF. To convert it back to number, use parseInt(hexstring, 16))
        LegacyId:
          type: integer
          description: EELVL ID.
        LegacyMorph:
          type: array
          items:
            type: integer
          description: EELVL Block arguments.
      type: object
    LobbyResult:
      type: object
      description: Lobby information.
      properties:
        visibleRooms:
          type: array
          items:
            $ref: '#/components/schemas/LobbyResultWorld'
        onlineRoomCount:
          type: integer
          description: The total number of online worlds.
        onlinePlayerCount:
          type: integer
          description: The total number of online players across all worlds.
    LobbyResultWorld:
      type: object
      description: Information about a specific world.
      properties:
        id:
          type: integer
          description: The unique identifier of the world.
        players:
          type: integer
          description: The current number of players in the world.
        max_players:
          type: integer
          description: The maximum number of players allowed in the world.
        data:
          $ref: '#/components/schemas/LobbyResultWorldData'

    LobbyResultWorldData:
      type: object
      description: Additional data associated with the world.
      properties:
        title:
          type: string
          description: The title of the world.
        description:
          type: string
          description: A description of the world.
        owner:
          type: string
          description: Owner of world.
        ownerRole:
          type: string
          description: "Special role of owner. Observed possible values: [committee, dev]. If owner doesn't have role, empty string returned."
        plays:
          type: integer
          description: The number of times this world has been played.
        minimapEnabled:
          type: boolean
          description: Indicates whether the minimap is enabled for this world.
        type:
          type: integer
          description: "The type of the world. Observed possible values: [0, 1, 2]. Educated guesses of type values: 0 - normal worlds, 1 - unsaved worlds, 2 - legacy worlds with prefix 'legacy:' in world id."
    AuthResultSuccess:
      type: object
      description: Successful authentication result.
      properties:
        record:
          $ref: '#/components/schemas/AuthResultData'
          description: User record data.
        token:
          type: string
          description: The authentication token for future requests.

    AuthResultData:
      type: object
      description: User data returned after successful authentication.
      properties:
        banned:
          type: boolean
          description: Indicates if the user is banned.
        collectionId:
          type: string
          description: The ID of the collection the user belongs to.
        collectionName:
          type: string
          description: The name of the collection the user belongs to.
        created:
          type: string
          format: date-time
          description: The date and time the user was created (ISO 8601 format).
        email:
          type: string
          format: email
          description: The user's email address.
        emailVisibility:
          type: boolean
          description: Indicates if the user's email address is visible to others.
        face:
          type: integer
          description: The user's face ID.
        friends:
          type: array
          items:
            type: string
          description: List of user IDs of the user's friends.
        id:
          type: string
          description: The unique user ID.
        isSuspicious:
          type: boolean
          description: Indicates if the user is considered suspicious.
        lastSeen:
          type: string
          format: date-time
          description: The date and time the user was last seen (ISO 8601 format).
        lastWorld:
          type: string
          description: The ID of the last world the user was in.
        lastWorldTitle:
          type: string
          description: The title of the last world the user was in.
        role:
          type: string
          description: The user's role.
        updated:
          type: string
          format: date-time
          description: The date and time the user was last updated (ISO 8601 format).
        username:
          type: string
          description: The user's username.
        verified:
          type: boolean
          description: Indicates if the user's email address is verified.

    APIFailure:
      type: object
      description: Validation error details for specific fields.
      properties:
        data:
          type: object
          description: Validation error details for specific fields.
        message:
          type: string
          description: A human-readable error message (e.g., "Failed to authenticate.").
        status:
          type: string
          description: "HTTP code (e.g., '400')."

    FieldError:
      type: object
      description: Details of a validation error for a specific field.
      properties:
        code:
          type: string
          description: The error code (e.g., "validation_required").
        message:
          type: string
          description: A human-readable error message (e.g., "Cannot be blank.").
    JoinKeyResult:
      type: object
      description: The result of the join key request.
      properties:
        token:
          type: string
          description: The join key token. This token is used to join the specified room.
  securitySchemes:
    ApiKey:
      type: apiKey
      name: Authorization
      in: header
      description: 'JWT token obtained from /api/collections/users/auth-with-password'
security:
  - ApiKey: [ ]